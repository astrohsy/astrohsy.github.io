<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shooting Bugs</title>
    <description>학생으로서 개발하면서 참가하게 된 대회들과 간단한 알고리즘에 대한 내용들을 올릴 생각입니다..</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 14 Sep 2016 22:41:57 +0900</pubDate>
    <lastBuildDate>Wed, 14 Sep 2016 22:41:57 +0900</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>제 2회 삼성 프로그래밍 경진대회(SCPC) 참가 후기</title>
        <description>&lt;p class=&quot;scpc1&quot;&gt;&lt;img src=&quot;/images/scpc2.jpg&quot; alt=&quot;Image description&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;postsub&quot;&gt;SCPC&lt;/p&gt;

&lt;p class=&quot;postwrite&quot;&gt;삼성에서 개최하는 작년부터 개최하기 시작한 대학생과 대학원이 참가 가능한 알고리즘 대회이다.
1차와 2차는 온라인으로 진행되었고, 본선은 우면동에 위치한 삼성전자 건물에서 진행이 되었다.&lt;/p&gt;

&lt;p&gt;나는 운이 좋게도 2차 예선에서 A, B와 C 부분 점수를 맞았는데 제출 횟수가 적어서인지 본선 진출 대상자가 되었다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p class=&quot;postsub&quot;&gt;본선 대회 전&lt;/p&gt;

&lt;p class=&quot;postwrite&quot;&gt;대회가 진행하기 전에 대회장 앞에 여러 이벤트 부스들이 배치되어 있었다. 미니게임과 QR코드를 활용한 Quiz프로그램이 있었고, 기어s2와 다른 여러 상품을 제공하였다.&lt;/p&gt;

&lt;p class=&quot;clearfloat scpc2&quot;&gt;&lt;img src=&quot;/images/scpc1.jpg&quot; alt=&quot;Image description&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;scpc3&quot;&gt;&lt;img src=&quot;/images/scpc3.jpg&quot; alt=&quot;Image description&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;clearfloat postsub&quot;&gt;대회&lt;/p&gt;

&lt;p class=&quot;postwrite&quot;&gt;대회 문제는 확실히 1차, 2차 예선문제보다는 난이도가 있었다. 대회를 치르고 나서 아직 나는 아직 알고리즘 공부가 많이 부족하다는 것을 깨닳았다. 대회문제는 아마도 &lt;a href=&quot;http://codeground.org&quot;&gt;Codeground&lt;/a&gt;에 올라와 있을 것 이다.
1번 마땅한 해결책이 생각나지 않아 2번 째, 테스트 그룹까지만 득점하였고, 2번 문제는 어떻게 푸는지는 알았는데, 코딩으로 옮기는 도중에 실수가 있었는지, 계속 부분점수만 받았다..&lt;/p&gt;

&lt;p&gt;대회 끝나고 말들을 들어보니 내 접근이 맞았었다. 코딩으로 옮기는 연습이 더욱 필요한 것 같다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p class=&quot;postsub&quot;&gt;대회 후&lt;/p&gt;

&lt;p class=&quot;postwrite&quot;&gt;30명 정도의 상위 득점자들의 수상식을 진행하고, 대회가 종료가 되었다. 삼성전자 신종균 대표이사가 대회를 찾아오셔서 많이 놀랐다. 세삼 이 대회가 큰 대회라는 것을 실감하였다.&lt;/p&gt;

&lt;p&gt;대회가 끝나고, 대회에서 사용했던 청축식 기계식 키보드와 마우스패드 또, 키보드가 들어갈 수 있는 에코백을 주었다. 비록 올해는 좋은 성과를 거두지 못했지만, 다음에 기회가 된다면 더욱 열심히 해서 좋은 성과를 거두고 싶다.&lt;/p&gt;
</description>
        <pubDate>Tue, 13 Sep 2016 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/contest/scpc2016/</link>
        <guid isPermaLink="true">http://localhost:4000/contest/scpc2016/</guid>
        
        <category>scpc</category>
        
        
        <category>Contest</category>
        
      </item>
    
      <item>
        <title>SW개발병, 소프트웨어개발병 면접 후기</title>
        <description>&lt;h3&gt;지원동기&lt;/h3&gt;
&lt;p&gt;우연히 병무청 홈페이지를 둘러보았는데, S/W개발병 모집공고가 눈에 들어왔다. 군대 문제로 머리가 아팠던 나는 군대에서도 프로그래밍을 까먹지 않고, 오히려 더 배울 수 있다는 생각에 S/W개발병 서류 지원을 하게 되었다.&lt;/p&gt;

&lt;h3&gt;서류접수&lt;/h3&gt;
&lt;p&gt;옛날과는 달리 S/W개발병 지원 자격이 많이 달라졌다. 그전에 SW개발병 후기로 올라온 글들을 보면 “자격증 소지자”나 “2년 이상 컴퓨터 관련 전공을 한 자” 였지만, 아마도 2016년도 1차 모집부터 지원자격이 다음과 같이 바겼다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;MOU체결기관(소프트웨어 마에스트로, Best of Best)&lt;/li&gt;
  &lt;li&gt;소프트웨어 경진대회 및 정보보안대회 수상자&lt;/li&gt;
  &lt;li&gt;동아리나 연구실에서 SW프로젝트를 수행한 자&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;지원자격을 보면 많이 까다로워졌다. 아마도 그전 선발 방식에서는 SW개발 경험이 별로 없었던 사람들도 많이 선발이 되어서 문제가 되었나보다.&lt;/p&gt;

&lt;h3&gt;서류합격&lt;/h3&gt;
&lt;p&gt;막 개학을 해서 정신이 없었던 나는 문자 한 통을 받았다. SW개발병 서류전형에 합격하였고, 용산역 부근으로 면접보러 오라는 문자였다.&lt;/p&gt;

&lt;h3&gt;면접&lt;/h3&gt;
&lt;p&gt;새벽같이 기차를 타고 용산역 부근으로 면접을 치러 갔다. 면접을 여러 날로 나눠서 치는 것 같았다. 그리고 면접 시간 외 시간이 예상 했던 것보다 많이 길어서 당황했다. 심리 테스트를 보고 점심을 먹고 다시 면접을 보러 갔다.&lt;/p&gt;

&lt;p&gt;돌아가서 좀 기달리자, 면접이 시작되었다. 면접관님들은 모두 5명 이였다. 지원자 4명이 같이 면접을 보러 들어갔다.&lt;/p&gt;

&lt;p&gt;질문은 다음과 같은 것들이 나왔다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;안보관&lt;/li&gt;
  &lt;li&gt;지원동기&lt;/li&gt;
  &lt;li&gt;자기가 개발한 대표적인 소프트웨어 설명&lt;/li&gt;
  &lt;li&gt;군대 생활 관련&lt;/li&gt;
  &lt;li&gt;자기소개서를 보고 하는 질문&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;면접은 무난하게 끝나고 돌아왔다.
면접같은 경우는 따로 준비할 필요는 없고, 자기가 개발한 소프트웨어에 대한 내용을 다시 한 번 상기시켜보면 충분할 것 같다.&lt;/p&gt;
</description>
        <pubDate>Mon, 12 Sep 2016 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/life/sw-develop-soldier-interview/</link>
        <guid isPermaLink="true">http://localhost:4000/life/sw-develop-soldier-interview/</guid>
        
        <category>군인</category>
        
        <category>sw개발병</category>
        
        <category>면접</category>
        
        
        <category>Life</category>
        
      </item>
    
      <item>
        <title>최소공배수와 최대공약수을 구하는 알고리즘</title>
        <description>&lt;h3&gt;유클리드 호제법&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;두 양의 정수 a, b에 대해서 b = aq + r (0 &amp;lt;= r &amp;lt; a)라 하면 a, b의 최대 공약수는 a, r의 최대 공약수와 같다는 원리이다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;최대공약수를 구하는 방법&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;유클리드 호제법으로 재귀와 반복문을 이용하여서 최대공약수(Greatest Common Divisor)를 구하는 알고리즘을 구현할 수 있다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;1.재귀함수를 이용한 구현&lt;/p&gt;

&lt;/blockquote&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;gcd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// b == 0이면 더 이상 최대공약수를 갖지 않기 때문에 a를 반환한다.
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gcd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 유클리드 호제법을 활용하여서 a, b의 최대 공약수를 b, r(a%b)로 치환한다.
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;2.반복문을 이용한 구현&lt;/p&gt;

&lt;/blockquote&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3&gt;최소공배수를 구하는 방법&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;최소공배수(Least Common Multiple)는 최대공약수를 구하면 거의 다 구한 값이다. &lt;br /&gt;
서로 곱한 값에서 공통이 부분만 제외해주면 된다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// gcd는 a, b의 최대공약수이다.
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lcm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gcd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Sat, 10 Sep 2016 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/algorithm/gcd/</link>
        <guid isPermaLink="true">http://localhost:4000/algorithm/gcd/</guid>
        
        <category>Algorithm</category>
        
        <category>gcd</category>
        
        <category>lcd</category>
        
        <category>최대공약수</category>
        
        <category>최소공배수</category>
        
        <category>유클리드호제법</category>
        
        
        <category>Algorithm</category>
        
      </item>
    
      <item>
        <title>Stack에 대한 이해</title>
        <description>&lt;p&gt;1.개념
Stack은 가장 기본적이고 널리 쓰이고 있는 자료구조이다.
처음에 넣은 것은 마지막에 돌려주는 Last in First Out 즉, LIFO의 특성을 가진다.&lt;/p&gt;

&lt;p&gt;2.구현&lt;/p&gt;
</description>
        <pubDate>Thu, 08 Sep 2016 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/data%20structure/stack/</link>
        <guid isPermaLink="true">http://localhost:4000/data%20structure/stack/</guid>
        
        <category>자료구조</category>
        
        <category>스택</category>
        
        <category>스텍</category>
        
        <category>stack</category>
        
        <category>Stack</category>
        
        <category>LIFO</category>
        
        
        <category>Data Structure</category>
        
      </item>
    
  </channel>
</rss>
